diff --git a/node_modules/hexo-word-counter/lib/helper.js b/node_modules/hexo-word-counter/lib/helper.js
index 143419c..a2fe5d6 100644
--- a/node_modules/hexo-word-counter/lib/helper.js
+++ b/node_modules/hexo-word-counter/lib/helper.js
@@ -2,7 +2,7 @@
 
 let config = {};
 
-module.exports.setConfig = function(_config) {
+module.exports.setConfig = function (_config) {
   config = _config;
 };
 
@@ -10,18 +10,28 @@ function getSymbols(post) {
   return post.length;
 }
 
-function getFormatTime(minutes, suffix) {
-  const fHours = Math.floor(minutes / 60);
-  let fMinutes = Math.floor(minutes - (fHours * 60));
-  if (fMinutes < 1) {
-    fMinutes = 1; // 0 => 1
-  }
-  return fHours < 1
-    ? fMinutes + ' ' + suffix // < 59 => 59 mins.
-    : fHours + ':' + ('00' + fMinutes).slice(-2); // = 61 => 1:01
+function getFormatTime(seconds, suffix) {
+  const h = Math.floor(seconds / 3600);
+  const m = Math.floor(seconds % 3600 / 60);
+  const s = Math.floor(seconds % 60);
+
+  const hDisplay = ('00' + h).slice(-2) + ":";
+  const mDisplay = ('00' + m).slice(-2) + ":";
+  const sDisplay = ('00' + s).slice(-2);
+  return hDisplay + mDisplay + sDisplay;
 }
+// function getFormatTime(minutes, suffix) {
+//   const fHours = Math.floor(minutes / 60);
+//   let fMinutes = Math.floor(minutes - (fHours * 60));
+//   if (fMinutes < 1) {
+//     fMinutes = 1; // 0 => 1
+//   }
+//   return fHours < 1
+//     ? fMinutes + ' ' + suffix // < 59 => 59 mins.
+//     : fHours + ':' + ('00' + fMinutes).slice(-2); // = 61 => 1:01
+// }
 
-module.exports.symbolsCount = function(post) {
+module.exports.symbolsCount = function (post) {
   let symbolsResult = getSymbols(post);
   if (symbolsResult > 9999) {
     symbolsResult = Math.round(symbolsResult / 1000) + 'k'; // > 9999 => 11k
@@ -31,9 +41,11 @@ module.exports.symbolsCount = function(post) {
   return symbolsResult;
 };
 
-module.exports.symbolsTime = function(post, awl = config.awl, wpm = config.wpm, suffix = config.suffix) {
-  const minutes = Math.round(getSymbols(post) / (awl * wpm));
-  return getFormatTime(minutes, suffix);
+module.exports.symbolsTime = function (post, awl = config.awl, wpm = config.wpm, suffix = config.suffix) {
+  // const minutes = Math.round(getSymbols(post) / (awl * wpm));
+  // return getFormatTime(minutes, suffix);
+  const seconds = Math.round(getSymbols(post) / (awl * wpm) * 60);
+  return getFormatTime(seconds, suffix);
 };
 
 function getSymbolsTotal(site) {
@@ -44,14 +56,18 @@ function getSymbolsTotal(site) {
   return symbolsResultCount;
 }
 
-module.exports.symbolsCountTotal = function(site) {
+module.exports.symbolsCountTotal = function (site) {
   const symbolsResultTotal = getSymbolsTotal(site);
-  return symbolsResultTotal < 1000000
-    ? Math.round(symbolsResultTotal / 1000) + 'k' // < 999k => 111k
-    : (Math.round(symbolsResultTotal / 100000) / 10) + 'm'; // > 999k => 1.1m
+  // return symbolsResultTotal.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
+  return symbolsResultTotal.toLocaleString();
+  // return symbolsResultTotal < 1000000
+  //   ? Math.round(symbolsResultTotal / 1000) + 'k' // < 999k => 111k
+  //   : (Math.round(symbolsResultTotal / 100000) / 10) + 'm'; // > 999k => 1.1m
 };
 
-module.exports.symbolsTimeTotal = function(site, awl = config.awl, wpm = config.wpm, suffix = config.suffix) {
-  const minutes = Math.round(getSymbolsTotal(site) / (awl * wpm));
-  return getFormatTime(minutes, suffix);
+module.exports.symbolsTimeTotal = function (site, awl = config.awl, wpm = config.wpm, suffix = config.suffix) {
+  // const minutes = Math.round(getSymbolsTotal(site) / (awl * wpm));
+  // return getFormatTime(minutes, suffix);
+  const seconds = Math.round(getSymbolsTotal(site) / (awl * wpm) * 60);
+  return getFormatTime(seconds, suffix);
 };
